plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version + (System.getenv("CIRCLE_BUILD_NUM") != null ? ("-" + System.getenv("CIRCLE_BUILD_NUM")) : "")
group = project.maven_group

minecraft {
    accessWidener "src/main/resources/mathaxlegacy.accesswidener"
}

repositories {
    // GitHub
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }

    // Meteor
    maven {
        name = "meteor-maven"
        url = "https://maven.meteordev.org"
    }
    maven {
        name = "meteor-maven-snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }

    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/releases/"
    }
    jcenter()
}

dependencies {
    def library = { id ->
        implementation id
        shadow id
    }

    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Compat fixes
    modCompileOnly fabricApi.module("fabric-renderer-indigo", project.api_version)
    modCompileOnly("me.jellysquid.mods:sodium-fabric:${project.sodium_version}") {
        transitive = false
    }
    modCompileOnly("grondag:canvas-mc117-1.17:1.0.+") {
        transitive = false
    }

    // Baritone integration
    modImplementation "baritone:baritone:${project.baritone_version}"
    include "baritone:baritone:${project.baritone_version}"

    // ModMenu integration
    modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}") {
        transitive = false
    }

    // Seed integration
    modImplementation "com.github.hube12:SEED:${project.seed_version}"
    include "com.github.hube12:SEED:${project.seed_version}"

    // Dependencies
    library "com.github.Vatuu:discord-rpc:${project.discord_version}"
}

shadowJar {
    configurations = [ project.configurations.shadow ]
}

processResources {
    inputs.property "version", project.version

    duplicatesStrategy = DuplicatesStrategy.WARN

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version

        filter {
            line -> line.replace("@mc_version@", project.minecraft_version)
        }
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 16
}

jar {
    from "LICENSE"

    manifest {
        attributes("Main-Class": "mathax.legacy.installer.Installer")
    }
}

remapJar {
    dependsOn shadowJar
    input.set(shadowJar.archiveFile)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }

            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }

            artifact(javadocJar) {
                builtBy javadocJar
            }
        }
    }
}

apply from: "scripts/packetutils.gradle"
